[[1;34mINFO[m] Scanning for projects...
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1mBuilding ExactProTest 1.0-SNAPSHOT[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] 
[[1;34mINFO[m] [1m--- [0;32mmaven-help-plugin:2.2:describe[m [1m(default-cli)[m @ [36mExactProTest[0;1m ---[m
[[1;34mINFO[m] org.apache.tomcat.maven:tomcat7-maven-plugin:2.2

Name: Apache Tomcat Maven Plugin :: Tomcat 7.x
Description: The Tomcat Maven Plugin provides goals to manipulate WAR
  projects within the Tomcat 7.x servlet container.
Group Id: org.apache.tomcat.maven
Artifact Id: tomcat7-maven-plugin
Version: 2.2
Goal Prefix: tomcat7

This plugin has 14 goals:

tomcat7:deploy
  Description: Deploy a WAR to Tomcat.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.deploy.DeployMojo
  Language: java
  Before this mojo executes, it will call:
    Phase: 'package'

  Available parameters:

    charset (Default: ISO-8859-1)
      Required: true
      User property: maven.tomcat.charset
      The URL encoding charset to use when communicating with Tomcat manager.

    contextFile (Default:
    ${project.build.directory}/${project.build.finalName}/META-INF/context.xml)
      The path of the Tomcat context XML file. This is not used for war
      deployment mode.

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    mode (Default: war)
      Required: true
      User property: maven.tomcat.mode
      The deployment mode to use. This must be either war to deploy the war,
      context to deploy the context XML file, or both to deploy the war with
      the context XML file.

    password
      User property: tomcat.password
      The password to use for deployment

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    server
      User property: maven.tomcat.server
      The server id in settings.xml to use when authenticating with Tomcat
      manager, or null to use defaults of username admin and no password.

    tag
      User property: maven.tomcat.tag
      The Tomcat webapp tag name to use.

    update (Default: false)
      Required: true
      User property: maven.tomcat.update
      Whether Tomcat should automatically undeploy webapps that already exist
      when deploying.

    url (Default: http://localhost:8080/manager/text)
      Required: true
      User property: maven.tomcat.url
      The full URL of the Tomcat manager instance to use.

    username
      User property: tomcat.username
      The tomcat username to use for deployment

    warFile (Default:
    ${project.build.directory}/${project.build.finalName}.war)
      Required: true
      The path of the WAR file to deploy.

tomcat7:deploy-only
  Description: Deploy a WAR to Tomcat without forking the package lifecycle.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.deploy.DeployOnlyMojo
  Language: java

  Available parameters:

    charset (Default: ISO-8859-1)
      Required: true
      User property: maven.tomcat.charset
      The URL encoding charset to use when communicating with Tomcat manager.

    contextFile (Default:
    ${project.build.directory}/${project.build.finalName}/META-INF/context.xml)
      The path of the Tomcat context XML file. This is not used for war
      deployment mode.

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    mode (Default: war)
      Required: true
      User property: maven.tomcat.mode
      The deployment mode to use. This must be either war to deploy the war,
      context to deploy the context XML file, or both to deploy the war with
      the context XML file.

    password
      User property: tomcat.password
      The password to use for deployment

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    server
      User property: maven.tomcat.server
      The server id in settings.xml to use when authenticating with Tomcat
      manager, or null to use defaults of username admin and no password.

    tag
      User property: maven.tomcat.tag
      The Tomcat webapp tag name to use.

    update (Default: false)
      Required: true
      User property: maven.tomcat.update
      Whether Tomcat should automatically undeploy webapps that already exist
      when deploying.

    url (Default: http://localhost:8080/manager/text)
      Required: true
      User property: maven.tomcat.url
      The full URL of the Tomcat manager instance to use.

    username
      User property: tomcat.username
      The tomcat username to use for deployment

    warFile (Default:
    ${project.build.directory}/${project.build.finalName}.war)
      Required: true
      The path of the WAR file to deploy.

tomcat7:exec-war
  Description: Create a self executable jar file containing all necessary
    Apache Tomcat classes. This allows for using just java -jar mywebapp.jar to
    run your webapp without needing to install a Tomcat instance. More details
    here.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.ExecWarMojo
  Language: java
  Before this mojo executes, it will call:
    Phase: 'package'

  Available parameters:

    accessLogValveFormat (Default: %h %l %u %t %r %s %b %I %D)
      Required: true
      User property: maven.tomcat.exec.war.accessLogValveFormat
      see http://tomcat.apache.org/tomcat-7.0-doc/config/valve.html

    attachArtifact (Default: true)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifact
      Attach or not the generated artifact to the build (use true if you want
      to install or deploy it)

    attachArtifactClassifier (Default: exec-war)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactClassifier
      the classifier to use for the attached/generated artifact

    attachArtifactClassifierType (Default: jar)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactType
      the type to use for the attached/generated artifact

    buildDirectory (Default: ${project.build.directory})
      (no description available)

    connectorHttpProtocol (Default: HTTP/1.1)
      Required: true
      User property: maven.tomcat.exec.war.connectorHttpProtocol
      which connector protocol to use HTTP/1.1 or
      org.apache.coyote.http11.Http11NioProtocol

    enableNaming (Default: false)
      Required: true
      User property: maven.tomcat.exec.war.enableNaming
      to enable naming when starting tomcat

    excludes
      File patterns to exclude from extraDependencies

    extraDependencies
      list of extra dependencies to add in the standalone tomcat jar: your jdbc
      driver, mail.jar etc.. Those dependencies will be in root classloader.

    extraResources
      list of extra resources to add in the standalone tomcat jar: your logger
      configuration etc

    finalName (Default: ${project.artifactId}-${project.version}-war-exec.jar)
      Required: true
      User property: tomcat.jar.finalName
      Name of the generated exec JAR.

    httpPort
      User property: maven.tomcat.exec.war.httpPort
      configure a default http port for the standalone jar

    mainClass (Default: org.apache.tomcat.maven.runner.Tomcat7RunnerCli)
      Required: true
      User property: maven.tomcat.exec.war.mainClass
      Main class to use for starting the standalone jar.

    path (Default: ${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. The
      name to store webapp in exec jar. Do not use /

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    pluginWorkDirectory (Default:
    ${project.build.directory}/tomcat7-maven-plugin-exec)
      Path under buildDirectory where this mojo may do temporary work.

    serverXml (Default: src/main/tomcatconf/server.xml)
      User property: maven.tomcat.exec.war.serverXml
      (no description available)

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip the execution

    tomcatConfigurationFilesDirectory (Default: src/main/tomcatconf)
      User property: maven.tomcat.exec.war.tomcatConf
      (no description available)

    warRunDependencies
      (no description available)

tomcat7:exec-war-only
  Description: Same as exec-war goal without forking the package lifecycle.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.ExecWarOnlyMojo
  Language: java

  Available parameters:

    accessLogValveFormat (Default: %h %l %u %t %r %s %b %I %D)
      Required: true
      User property: maven.tomcat.exec.war.accessLogValveFormat
      see http://tomcat.apache.org/tomcat-7.0-doc/config/valve.html

    attachArtifact (Default: true)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifact
      Attach or not the generated artifact to the build (use true if you want
      to install or deploy it)

    attachArtifactClassifier (Default: exec-war)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactClassifier
      the classifier to use for the attached/generated artifact

    attachArtifactClassifierType (Default: jar)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactType
      the type to use for the attached/generated artifact

    buildDirectory (Default: ${project.build.directory})
      (no description available)

    connectorHttpProtocol (Default: HTTP/1.1)
      Required: true
      User property: maven.tomcat.exec.war.connectorHttpProtocol
      which connector protocol to use HTTP/1.1 or
      org.apache.coyote.http11.Http11NioProtocol

    enableNaming (Default: false)
      Required: true
      User property: maven.tomcat.exec.war.enableNaming
      to enable naming when starting tomcat

    excludes
      File patterns to exclude from extraDependencies

    extraDependencies
      list of extra dependencies to add in the standalone tomcat jar: your jdbc
      driver, mail.jar etc.. Those dependencies will be in root classloader.

    extraResources
      list of extra resources to add in the standalone tomcat jar: your logger
      configuration etc

    finalName (Default: ${project.artifactId}-${project.version}-war-exec.jar)
      Required: true
      User property: tomcat.jar.finalName
      Name of the generated exec JAR.

    httpPort
      User property: maven.tomcat.exec.war.httpPort
      configure a default http port for the standalone jar

    mainClass (Default: org.apache.tomcat.maven.runner.Tomcat7RunnerCli)
      Required: true
      User property: maven.tomcat.exec.war.mainClass
      Main class to use for starting the standalone jar.

    path (Default: ${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. The
      name to store webapp in exec jar. Do not use /

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    pluginWorkDirectory (Default:
    ${project.build.directory}/tomcat7-maven-plugin-exec)
      Path under buildDirectory where this mojo may do temporary work.

    serverXml (Default: src/main/tomcatconf/server.xml)
      User property: maven.tomcat.exec.war.serverXml
      (no description available)

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip the execution

    tomcatConfigurationFilesDirectory (Default: src/main/tomcatconf)
      User property: maven.tomcat.exec.war.tomcatConf
      (no description available)

    warRunDependencies
      (no description available)

tomcat7:help
  Description: Display help information on tomcat7-maven-plugin.
    Call mvn tomcat7:help -Ddetail=true -Dgoal=<goal-name> to display parameter
    details.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.HelpMojo
  Language: java

  Available parameters:

    detail (Default: false)
      User property: detail
      If true, display all settable properties for each goal.

    goal
      User property: goal
      The name of the goal for which to show help. If unspecified, all goals
      will be displayed.

    indentSize (Default: 2)
      User property: indentSize
      The number of spaces per indentation level, should be positive.

    lineLength (Default: 80)
      User property: lineLength
      The maximum length of a display line, should be positive.

tomcat7:redeploy
  Description: Redeploy a WAR in Tomcat. (Alias for the deploy goal with its
    update parameter set to true.)
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.deploy.RedeployMojo
  Language: java
  Before this mojo executes, it will call:
    Phase: 'package'

  Available parameters:

    charset (Default: ISO-8859-1)
      Required: true
      User property: maven.tomcat.charset
      The URL encoding charset to use when communicating with Tomcat manager.

    contextFile (Default:
    ${project.build.directory}/${project.build.finalName}/META-INF/context.xml)
      The path of the Tomcat context XML file. This is not used for war
      deployment mode.

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    mode (Default: war)
      Required: true
      User property: maven.tomcat.mode
      The deployment mode to use. This must be either war to deploy the war,
      context to deploy the context XML file, or both to deploy the war with
      the context XML file.

    password
      User property: tomcat.password
      The password to use for deployment

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    server
      User property: maven.tomcat.server
      The server id in settings.xml to use when authenticating with Tomcat
      manager, or null to use defaults of username admin and no password.

    tag
      User property: maven.tomcat.tag
      The Tomcat webapp tag name to use.

    update (Default: false)
      Required: true
      User property: maven.tomcat.update
      Whether Tomcat should automatically undeploy webapps that already exist
      when deploying.

    url (Default: http://localhost:8080/manager/text)
      Required: true
      User property: maven.tomcat.url
      The full URL of the Tomcat manager instance to use.

    username
      User property: tomcat.username
      The tomcat username to use for deployment

    warFile (Default:
    ${project.build.directory}/${project.build.finalName}.war)
      Required: true
      The path of the WAR file to deploy.

tomcat7:redeploy-only
  Description: Redeploy a WAR in Tomcat without forking the package
    lifecycle. (Alias for the deploy-only goal with its update parameter set to
    true.)
  Implementation:
  org.apache.tomcat.maven.plugin.tomcat7.deploy.RedeployOnlyMojo
  Language: java

  Available parameters:

    charset (Default: ISO-8859-1)
      Required: true
      User property: maven.tomcat.charset
      The URL encoding charset to use when communicating with Tomcat manager.

    contextFile (Default:
    ${project.build.directory}/${project.build.finalName}/META-INF/context.xml)
      The path of the Tomcat context XML file. This is not used for war
      deployment mode.

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    mode (Default: war)
      Required: true
      User property: maven.tomcat.mode
      The deployment mode to use. This must be either war to deploy the war,
      context to deploy the context XML file, or both to deploy the war with
      the context XML file.

    password
      User property: tomcat.password
      The password to use for deployment

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    server
      User property: maven.tomcat.server
      The server id in settings.xml to use when authenticating with Tomcat
      manager, or null to use defaults of username admin and no password.

    tag
      User property: maven.tomcat.tag
      The Tomcat webapp tag name to use.

    update (Default: false)
      Required: true
      User property: maven.tomcat.update
      Whether Tomcat should automatically undeploy webapps that already exist
      when deploying.

    url (Default: http://localhost:8080/manager/text)
      Required: true
      User property: maven.tomcat.url
      The full URL of the Tomcat manager instance to use.

    username
      User property: tomcat.username
      The tomcat username to use for deployment

    warFile (Default:
    ${project.build.directory}/${project.build.finalName}.war)
      Required: true
      The path of the WAR file to deploy.

tomcat7:run
  Description: Runs the current project as a dynamic web application using an
    embedded Tomcat server.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.RunMojo
  Language: java
  Before this mojo executes, it will call:
    Phase: 'process-classes'

  Available parameters:

    addContextWarDependencies (Default: false)
      User property: maven.tomcat.addContextWarDependencies
      Will create a tomcat context for each dependencies of war type with
      'scope' set to 'tomcat'. In other words, dependencies with:
         <type>war</type>
         <scope>tomcat</scope>
      To preserve backward compatibility it's false by default.
      Deprecated. use webapps instead

    additionalClasspathDirs
      Additional optional directories to add to the embedded tomcat classpath.

    additionalConfigFilesDir (Default: ${basedir}/src/main/tomcatconf)
      User property: maven.tomcat.additionalConfigFilesDir
      The directory contains additional configuration Files that copied in the
      Tomcat conf Directory.

    address
      User property: maven.tomcat.address
      this IP address will be used on all ports

    addWarDependenciesInClassloader (Default: true)
      User property: maven.tomcat.addWarDependenciesInClassloader
      will add /WEB-INF/lib/*.jar and /WEB-INF/classes from war dependencies in
      the webappclassloader

    ajpPort (Default: 0)
      User property: maven.tomcat.ajp.port
      The AJP port to run the Tomcat server on. By default it's 0 this means
      won't be started. The ajp connector will be started only for value > 0.
      Will be exposed as System props and session.executionProperties with key
      tomcat.maven.ajp.port

    ajpProtocol (Default: org.apache.coyote.ajp.AjpProtocol)
      User property: maven.tomcat.ajp.protocol
      The AJP protocol to run the Tomcat server on. By default it's ajp. NOTE
      The ajp connector will be started only if ajpPort > 0. possible values
      are:
      - org.apache.coyote.ajp.AjpProtocol - new blocking Java connector that
        supports an executor
      - org.apache.coyote.ajp.AjpAprProtocol - the APR/native connector.

    aliases
      configure aliases see Host Name aliases

    backgroundProcessorDelay (Default: -1)
      User property: maven.tomcat.backgroundProcessorDelay
      represents the delay in seconds between each classPathScanning change
      invocation

    classLoaderClass
      Class loader class to set.

    clientAuth (Default: false)
      User property: maven.tomcat.https.clientAuth
      enable client authentication for https (if configured) see
      http://tomcat.apache.org/tomcat-7.0-doc/config/http.html#SSL_Support_-_BIO_and_NIO

    configurationDir (Default: ${project.build.directory}/tomcat)
      The directory to create the Tomcat server configuration under.

    contextFile
      User property: maven.tomcat.contextFile
      The path of the Tomcat context XML file.
      
      Since release 2.0, the file is filtered as a maven resource so you can
      use interpolation tokens ${ }

    contextReloadable (Default: false)
      User property: maven.tomcat.contextReloadable
      Force context scanning if you don't use a context file with reloadable =
      'true'. The other way to use contextReloadable is to add attribute
      reloadable = 'true' in your context file.

    delegate (Default: true)
      User property: tomcat.delegate
      Set the 'follow standard delegation model' flag used to configure our
      ClassLoader.

    fork (Default: false)
      User property: maven.tomcat.fork
      Set this to true to allow Maven to continue to execute after invoking the
      run goal.

    hostName (Default: localhost)
      User property: maven.tomcat.hostName
      configure host name

    httpsPort (Default: 0)
      User property: maven.tomcat.httpsPort
      The https port to run the Tomcat server on. By default it's 0 this means
      won't be started. The https connector will be started only for value > 0.
      Will be exposed as System props and session.executionProperties with key
      tomcat.maven.https.port

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    jarScanAllDirectories (Default: true)
      User property: maven.tomcat.jarScan.allDirectories
      In case a module in your reactors has some web-fragments they will be
      read. If you don't need that for performance reasons, you can deactivate
      it.

    keystoreFile
      Override the default keystoreFile for the HTTPS connector (if enabled)

    keystorePass
      Override the default keystorePass for the HTTPS connector (if enabled)

    keystoreType (Default: JKS)
      Override the type of keystore file to be used for the server certificate.
      If not specified, the default value is 'JKS'.

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    port (Default: 8080)
      User property: maven.tomcat.port
      The port to run the Tomcat server on. Will be exposed as System props and
      session.executionProperties with key tomcat.maven.http.port

    propertiesPortFilePath
      User property: maven.tomcat.propertiesPortFilePath
      Will dump port in a properties file (see ports for property names). If
      empty no file generated

    protocol (Default: HTTP/1.1)
      User property: maven.tomcat.protocol
      The protocol to run the Tomcat server on. By default it's HTTP/1.1. See
      possible values HTTP Connector protocol attribute

    serverXml
      User property: maven.tomcat.serverXml
      server.xml to use Note if you use this you must configure in this file
      your webapp paths.

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip execution

    staticContextDocbase
      User property: maven.tomcat.staticContextDocbase
      The static context docroot base fully qualified path if null static
      context won't be added

    staticContextPath (Default: /)
      User property: maven.tomcat.staticContextPath
      The static context

    systemProperties
      List of System properties to pass to the Tomcat Server.

    tomcatLoggingFile
      User property: maven.tomcat.tomcatLogging.file
      The path of the Tomcat logging configuration.

    tomcatUsers
      User property: maven.tomcat.tomcatUsers.file
      The path of the Tomcat users XML file.

    tomcatWebXml
      User property: maven.tomcat.webXml
      overriding the providing web.xml to run tomcat This override the global
      Tomcat web.xml located in $CATALINA_HOME/conf/

    trustManagerClassName
      (no description available)

    trustMaxCertLength
      (no description available)

    truststoreAlgorithm
      (no description available)

    truststoreFile
      (no description available)

    truststorePass
      (no description available)

    truststoreProvider
      (no description available)

    truststoreType
      (no description available)

    uriEncoding (Default: ISO-8859-1)
      User property: maven.tomcat.uriEncoding
      The character encoding to use for decoding URIs.

    useBodyEncodingForURI (Default: false)
      User property: maven.tomcat.useBodyEncodingForURI
      (no description available)

    useNaming (Default: true)
      User property: maven.tomcat.useNaming
      Enables or disables naming support for the embedded Tomcat server.
      
      Note: This setting is ignored if you provide a server.xml for your
      Tomcat. Instead please configure naming in the server.xml.

    useSeparateTomcatClassLoader (Default: false)
      User property: tomcat.useSeparateTomcatClassLoader
      if true a new classLoader separated from maven core will be created to
      start tomcat.

    useTestClasspath (Default: false)
      User property: maven.tomcat.useTestClasspath
      will use the test classpath rather than the compile one and will add test
      dependencies too

    warSourceDirectory (Default: ${basedir}/src/main/webapp)
      User property: tomcat.warSourceDirectory
      The web resources directory for the web application being run.

    webapps
      Collection of webapp artifacts to be deployed. Elements are <webapp> and
      contain usual GAVC plus contextPath and/or contextFile elements.

tomcat7:run-war
  Description: Runs the current project as a packaged web application using
    an embedded Tomcat server.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.RunWarMojo
  Language: java
  Before this mojo executes, it will call:
    Phase: 'package'

  Available parameters:

    addContextWarDependencies (Default: false)
      User property: maven.tomcat.addContextWarDependencies
      Will create a tomcat context for each dependencies of war type with
      'scope' set to 'tomcat'. In other words, dependencies with:
         <type>war</type>
         <scope>tomcat</scope>
      To preserve backward compatibility it's false by default.
      Deprecated. use webapps instead

    additionalConfigFilesDir (Default: ${basedir}/src/main/tomcatconf)
      User property: maven.tomcat.additionalConfigFilesDir
      The directory contains additional configuration Files that copied in the
      Tomcat conf Directory.

    address
      User property: maven.tomcat.address
      this IP address will be used on all ports

    ajpPort (Default: 0)
      User property: maven.tomcat.ajp.port
      The AJP port to run the Tomcat server on. By default it's 0 this means
      won't be started. The ajp connector will be started only for value > 0.
      Will be exposed as System props and session.executionProperties with key
      tomcat.maven.ajp.port

    ajpProtocol (Default: org.apache.coyote.ajp.AjpProtocol)
      User property: maven.tomcat.ajp.protocol
      The AJP protocol to run the Tomcat server on. By default it's ajp. NOTE
      The ajp connector will be started only if ajpPort > 0. possible values
      are:
      - org.apache.coyote.ajp.AjpProtocol - new blocking Java connector that
        supports an executor
      - org.apache.coyote.ajp.AjpAprProtocol - the APR/native connector.

    aliases
      configure aliases see Host Name aliases

    backgroundProcessorDelay (Default: -1)
      User property: maven.tomcat.backgroundProcessorDelay
      represents the delay in seconds between each classPathScanning change
      invocation

    classLoaderClass
      Class loader class to set.

    clientAuth (Default: false)
      User property: maven.tomcat.https.clientAuth
      enable client authentication for https (if configured) see
      http://tomcat.apache.org/tomcat-7.0-doc/config/http.html#SSL_Support_-_BIO_and_NIO

    configurationDir (Default: ${project.build.directory}/tomcat)
      The directory to create the Tomcat server configuration under.

    contextFile
      User property: maven.tomcat.contextFile
      The path of the Tomcat context XML file.
      
      Since release 2.0, the file is filtered as a maven resource so you can
      use interpolation tokens ${ }

    contextReloadable (Default: false)
      User property: maven.tomcat.contextReloadable
      Force context scanning if you don't use a context file with reloadable =
      'true'. The other way to use contextReloadable is to add attribute
      reloadable = 'true' in your context file.

    fork (Default: false)
      User property: maven.tomcat.fork
      Set this to true to allow Maven to continue to execute after invoking the
      run goal.

    hostName (Default: localhost)
      User property: maven.tomcat.hostName
      configure host name

    httpsPort (Default: 0)
      User property: maven.tomcat.httpsPort
      The https port to run the Tomcat server on. By default it's 0 this means
      won't be started. The https connector will be started only for value > 0.
      Will be exposed as System props and session.executionProperties with key
      tomcat.maven.https.port

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    jarScanAllDirectories (Default: true)
      User property: maven.tomcat.jarScan.allDirectories
      In case a module in your reactors has some web-fragments they will be
      read. If you don't need that for performance reasons, you can deactivate
      it.

    keystoreFile
      Override the default keystoreFile for the HTTPS connector (if enabled)

    keystorePass
      Override the default keystorePass for the HTTPS connector (if enabled)

    keystoreType (Default: JKS)
      Override the type of keystore file to be used for the server certificate.
      If not specified, the default value is 'JKS'.

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    port (Default: 8080)
      User property: maven.tomcat.port
      The port to run the Tomcat server on. Will be exposed as System props and
      session.executionProperties with key tomcat.maven.http.port

    propertiesPortFilePath
      User property: maven.tomcat.propertiesPortFilePath
      Will dump port in a properties file (see ports for property names). If
      empty no file generated

    protocol (Default: HTTP/1.1)
      User property: maven.tomcat.protocol
      The protocol to run the Tomcat server on. By default it's HTTP/1.1. See
      possible values HTTP Connector protocol attribute

    serverXml
      User property: maven.tomcat.serverXml
      server.xml to use Note if you use this you must configure in this file
      your webapp paths.

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip execution

    staticContextDocbase
      User property: maven.tomcat.staticContextDocbase
      The static context docroot base fully qualified path if null static
      context won't be added

    staticContextPath (Default: /)
      User property: maven.tomcat.staticContextPath
      The static context

    systemProperties
      List of System properties to pass to the Tomcat Server.

    tomcatLoggingFile
      User property: maven.tomcat.tomcatLogging.file
      The path of the Tomcat logging configuration.

    tomcatUsers
      User property: maven.tomcat.tomcatUsers.file
      The path of the Tomcat users XML file.

    tomcatWebXml
      User property: maven.tomcat.webXml
      overriding the providing web.xml to run tomcat This override the global
      Tomcat web.xml located in $CATALINA_HOME/conf/

    trustManagerClassName
      (no description available)

    trustMaxCertLength
      (no description available)

    truststoreAlgorithm
      (no description available)

    truststoreFile
      (no description available)

    truststorePass
      (no description available)

    truststoreProvider
      (no description available)

    truststoreType
      (no description available)

    uriEncoding (Default: ISO-8859-1)
      User property: maven.tomcat.uriEncoding
      The character encoding to use for decoding URIs.

    useBodyEncodingForURI (Default: false)
      User property: maven.tomcat.useBodyEncodingForURI
      (no description available)

    useNaming (Default: true)
      User property: maven.tomcat.useNaming
      Enables or disables naming support for the embedded Tomcat server.
      
      Note: This setting is ignored if you provide a server.xml for your
      Tomcat. Instead please configure naming in the server.xml.

    useSeparateTomcatClassLoader (Default: false)
      User property: tomcat.useSeparateTomcatClassLoader
      if true a new classLoader separated from maven core will be created to
      start tomcat.

    warDirectory (Default:
    ${project.build.directory}/${project.build.finalName})
      Required: true
      User property: maven.tomcat.warDirectory
      The path of the exploded WAR directory to run.

    webapps
      Collection of webapp artifacts to be deployed. Elements are <webapp> and
      contain usual GAVC plus contextPath and/or contextFile elements.

tomcat7:run-war-only
  Description: Same as run-war goal without forking the package cycle.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.RunWarOnlyMojo
  Language: java

  Available parameters:

    addContextWarDependencies (Default: false)
      User property: maven.tomcat.addContextWarDependencies
      Will create a tomcat context for each dependencies of war type with
      'scope' set to 'tomcat'. In other words, dependencies with:
         <type>war</type>
         <scope>tomcat</scope>
      To preserve backward compatibility it's false by default.
      Deprecated. use webapps instead

    additionalConfigFilesDir (Default: ${basedir}/src/main/tomcatconf)
      User property: maven.tomcat.additionalConfigFilesDir
      The directory contains additional configuration Files that copied in the
      Tomcat conf Directory.

    address
      User property: maven.tomcat.address
      this IP address will be used on all ports

    ajpPort (Default: 0)
      User property: maven.tomcat.ajp.port
      The AJP port to run the Tomcat server on. By default it's 0 this means
      won't be started. The ajp connector will be started only for value > 0.
      Will be exposed as System props and session.executionProperties with key
      tomcat.maven.ajp.port

    ajpProtocol (Default: org.apache.coyote.ajp.AjpProtocol)
      User property: maven.tomcat.ajp.protocol
      The AJP protocol to run the Tomcat server on. By default it's ajp. NOTE
      The ajp connector will be started only if ajpPort > 0. possible values
      are:
      - org.apache.coyote.ajp.AjpProtocol - new blocking Java connector that
        supports an executor
      - org.apache.coyote.ajp.AjpAprProtocol - the APR/native connector.

    aliases
      configure aliases see Host Name aliases

    backgroundProcessorDelay (Default: -1)
      User property: maven.tomcat.backgroundProcessorDelay
      represents the delay in seconds between each classPathScanning change
      invocation

    classLoaderClass
      Class loader class to set.

    clientAuth (Default: false)
      User property: maven.tomcat.https.clientAuth
      enable client authentication for https (if configured) see
      http://tomcat.apache.org/tomcat-7.0-doc/config/http.html#SSL_Support_-_BIO_and_NIO

    configurationDir (Default: ${project.build.directory}/tomcat)
      The directory to create the Tomcat server configuration under.

    contextFile
      User property: maven.tomcat.contextFile
      The path of the Tomcat context XML file.
      
      Since release 2.0, the file is filtered as a maven resource so you can
      use interpolation tokens ${ }

    contextReloadable (Default: false)
      User property: maven.tomcat.contextReloadable
      Force context scanning if you don't use a context file with reloadable =
      'true'. The other way to use contextReloadable is to add attribute
      reloadable = 'true' in your context file.

    fork (Default: false)
      User property: maven.tomcat.fork
      Set this to true to allow Maven to continue to execute after invoking the
      run goal.

    hostName (Default: localhost)
      User property: maven.tomcat.hostName
      configure host name

    httpsPort (Default: 0)
      User property: maven.tomcat.httpsPort
      The https port to run the Tomcat server on. By default it's 0 this means
      won't be started. The https connector will be started only for value > 0.
      Will be exposed as System props and session.executionProperties with key
      tomcat.maven.https.port

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    jarScanAllDirectories (Default: true)
      User property: maven.tomcat.jarScan.allDirectories
      In case a module in your reactors has some web-fragments they will be
      read. If you don't need that for performance reasons, you can deactivate
      it.

    keystoreFile
      Override the default keystoreFile for the HTTPS connector (if enabled)

    keystorePass
      Override the default keystorePass for the HTTPS connector (if enabled)

    keystoreType (Default: JKS)
      Override the type of keystore file to be used for the server certificate.
      If not specified, the default value is 'JKS'.

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    port (Default: 8080)
      User property: maven.tomcat.port
      The port to run the Tomcat server on. Will be exposed as System props and
      session.executionProperties with key tomcat.maven.http.port

    propertiesPortFilePath
      User property: maven.tomcat.propertiesPortFilePath
      Will dump port in a properties file (see ports for property names). If
      empty no file generated

    protocol (Default: HTTP/1.1)
      User property: maven.tomcat.protocol
      The protocol to run the Tomcat server on. By default it's HTTP/1.1. See
      possible values HTTP Connector protocol attribute

    serverXml
      User property: maven.tomcat.serverXml
      server.xml to use Note if you use this you must configure in this file
      your webapp paths.

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip execution

    staticContextDocbase
      User property: maven.tomcat.staticContextDocbase
      The static context docroot base fully qualified path if null static
      context won't be added

    staticContextPath (Default: /)
      User property: maven.tomcat.staticContextPath
      The static context

    systemProperties
      List of System properties to pass to the Tomcat Server.

    tomcatLoggingFile
      User property: maven.tomcat.tomcatLogging.file
      The path of the Tomcat logging configuration.

    tomcatUsers
      User property: maven.tomcat.tomcatUsers.file
      The path of the Tomcat users XML file.

    tomcatWebXml
      User property: maven.tomcat.webXml
      overriding the providing web.xml to run tomcat This override the global
      Tomcat web.xml located in $CATALINA_HOME/conf/

    trustManagerClassName
      (no description available)

    trustMaxCertLength
      (no description available)

    truststoreAlgorithm
      (no description available)

    truststoreFile
      (no description available)

    truststorePass
      (no description available)

    truststoreProvider
      (no description available)

    truststoreType
      (no description available)

    uriEncoding (Default: ISO-8859-1)
      User property: maven.tomcat.uriEncoding
      The character encoding to use for decoding URIs.

    useBodyEncodingForURI (Default: false)
      User property: maven.tomcat.useBodyEncodingForURI
      (no description available)

    useNaming (Default: true)
      User property: maven.tomcat.useNaming
      Enables or disables naming support for the embedded Tomcat server.
      
      Note: This setting is ignored if you provide a server.xml for your
      Tomcat. Instead please configure naming in the server.xml.

    useSeparateTomcatClassLoader (Default: false)
      User property: tomcat.useSeparateTomcatClassLoader
      if true a new classLoader separated from maven core will be created to
      start tomcat.

    warDirectory (Default:
    ${project.build.directory}/${project.build.finalName})
      Required: true
      User property: maven.tomcat.warDirectory
      The path of the exploded WAR directory to run.

    webapps
      Collection of webapp artifacts to be deployed. Elements are <webapp> and
      contain usual GAVC plus contextPath and/or contextFile elements.

tomcat7:shutdown
  Description: Shuts down all possibly started embedded Tomcat servers. This
    will be automatically done through a shutdown hook or you may call this
    Mojo to shut them down explictly.
    
    By default the shutdown goal is not bound to any phase. For integration
    tests you might want to bind it to post-integration-test.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.ShutdownMojo
  Language: java

  Available parameters:

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    skip (Default: false)
      User property: maven.tomcat.skipShutdown
      Skip execution

    skipErrorOnShutdown (Default: false)
      User property: maven.tomcat.skipErrorOnShutdown
      Ignore error when shutdown

tomcat7:standalone-war
  Description: This Mojo will create an executable war file with embedded
    Tomcat that is also capable of being deployed elsewhere.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.run.StandaloneWarMojo
  Language: java
  Before this mojo executes, it will call:
    Phase: 'package'

  Available parameters:

    accessLogValveFormat (Default: %h %l %u %t %r %s %b %I %D)
      Required: true
      User property: maven.tomcat.exec.war.accessLogValveFormat
      see http://tomcat.apache.org/tomcat-7.0-doc/config/valve.html

    attachArtifact (Default: true)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifact
      Attach or not the generated artifact to the build (use true if you want
      to install or deploy it)

    attachArtifactClassifier (Default: standalone)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactClassifier
      the classifier to use for the attached/generated artifact

    attachArtifactClassifierType (Default: war)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactType
      the type to use for the attached/generated artifact

    buildDirectory (Default: ${project.build.directory})
      (no description available)

    connectorHttpProtocol (Default: HTTP/1.1)
      Required: true
      User property: maven.tomcat.exec.war.connectorHttpProtocol
      which connector protocol to use HTTP/1.1 or
      org.apache.coyote.http11.Http11NioProtocol

    enableNaming (Default: false)
      Required: true
      User property: maven.tomcat.exec.war.enableNaming
      to enable naming when starting tomcat

    excludes
      File patterns to exclude from extraDependencies

    extraDependencies
      list of extra dependencies to add in the standalone tomcat jar: your jdbc
      driver, mail.jar etc.. Those dependencies will be in root classloader.

    extraResources
      list of extra resources to add in the standalone tomcat jar: your logger
      configuration etc

    finalName (Default:
    ${project.artifactId}-${project.version}-standalone.war)
      Required: true
      User property: tomcat.jar.finalName
      Name of the generated WAR.

    httpPort
      User property: maven.tomcat.exec.war.httpPort
      configure a default http port for the standalone jar

    mainClass (Default: org.apache.tomcat.maven.runner.Tomcat7RunnerCli)
      Required: true
      User property: maven.tomcat.exec.war.mainClass
      Main class to use for starting the standalone jar.

    path (Default: ${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. The
      name to store webapp in exec jar. Do not use /

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    pluginWorkDirectory (Default:
    ${project.build.directory}/tomcat7-maven-plugin-exec)
      Path under buildDirectory where this mojo may do temporary work.

    serverXml (Default: src/main/tomcatconf/server.xml)
      User property: maven.tomcat.exec.war.serverXml
      (no description available)

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip the execution

    tomcatConfigurationFilesDirectory (Default: src/main/tomcatconf)
      User property: maven.tomcat.exec.war.tomcatConf
      (no description available)

    warRunDependencies
      (no description available)

tomcat7:standalone-war-only
  Description: This Mojo will create an executable war file with embedded
    Tomcat that is also capable of being deployed elsewhere.
  Implementation:
  org.apache.tomcat.maven.plugin.tomcat7.run.StandaloneWarOnlyMojo
  Language: java

  Available parameters:

    accessLogValveFormat (Default: %h %l %u %t %r %s %b %I %D)
      Required: true
      User property: maven.tomcat.exec.war.accessLogValveFormat
      see http://tomcat.apache.org/tomcat-7.0-doc/config/valve.html

    attachArtifact (Default: true)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifact
      Attach or not the generated artifact to the build (use true if you want
      to install or deploy it)

    attachArtifactClassifier (Default: standalone)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactClassifier
      the classifier to use for the attached/generated artifact

    attachArtifactClassifierType (Default: war)
      Required: true
      User property: maven.tomcat.exec.war.attachArtifactType
      the type to use for the attached/generated artifact

    buildDirectory (Default: ${project.build.directory})
      (no description available)

    connectorHttpProtocol (Default: HTTP/1.1)
      Required: true
      User property: maven.tomcat.exec.war.connectorHttpProtocol
      which connector protocol to use HTTP/1.1 or
      org.apache.coyote.http11.Http11NioProtocol

    enableNaming (Default: false)
      Required: true
      User property: maven.tomcat.exec.war.enableNaming
      to enable naming when starting tomcat

    excludes
      File patterns to exclude from extraDependencies

    extraDependencies
      list of extra dependencies to add in the standalone tomcat jar: your jdbc
      driver, mail.jar etc.. Those dependencies will be in root classloader.

    extraResources
      list of extra resources to add in the standalone tomcat jar: your logger
      configuration etc

    finalName (Default:
    ${project.artifactId}-${project.version}-standalone.war)
      Required: true
      User property: tomcat.jar.finalName
      Name of the generated WAR.

    httpPort
      User property: maven.tomcat.exec.war.httpPort
      configure a default http port for the standalone jar

    mainClass (Default: org.apache.tomcat.maven.runner.Tomcat7RunnerCli)
      Required: true
      User property: maven.tomcat.exec.war.mainClass
      Main class to use for starting the standalone jar.

    path (Default: ${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. The
      name to store webapp in exec jar. Do not use /

    pluginArtifacts (Default: ${plugin.artifacts})
      Required: true
      (no description available)

    pluginWorkDirectory (Default:
    ${project.build.directory}/tomcat7-maven-plugin-exec)
      Path under buildDirectory where this mojo may do temporary work.

    serverXml (Default: src/main/tomcatconf/server.xml)
      User property: maven.tomcat.exec.war.serverXml
      (no description available)

    skip (Default: false)
      User property: maven.tomcat.skip
      Skip the execution

    tomcatConfigurationFilesDirectory (Default: src/main/tomcatconf)
      User property: maven.tomcat.exec.war.tomcatConf
      (no description available)

    warRunDependencies
      (no description available)

tomcat7:undeploy
  Description: Undeploy a WAR from Tomcat.
  Implementation: org.apache.tomcat.maven.plugin.tomcat7.deploy.UndeployMojo
  Language: java

  Available parameters:

    charset (Default: ISO-8859-1)
      Required: true
      User property: maven.tomcat.charset
      The URL encoding charset to use when communicating with Tomcat manager.

    failOnError (Default: true)
      User property: maven.tomcat.failOnError
      Whether to fail the build if the web application cannot be undeployed.

    ignorePackaging (Default: false)
      User property: tomcat.ignorePackaging
      If set to true ignore if packaging of project is not 'war'.

    password
      User property: tomcat.password
      The password to use for deployment

    path (Default: /${project.artifactId})
      Required: true
      User property: maven.tomcat.path
      The webapp context path to use for the web application being run. This
      must always start with a forward-slash ('/').

    server
      User property: maven.tomcat.server
      The server id in settings.xml to use when authenticating with Tomcat
      manager, or null to use defaults of username admin and no password.

    url (Default: http://localhost:8080/manager/text)
      Required: true
      User property: maven.tomcat.url
      The full URL of the Tomcat manager instance to use.

    username
      User property: tomcat.username
      The tomcat username to use for deployment


[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] [1;32mBUILD SUCCESS[m
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
[[1;34mINFO[m] Total time: 3.232 s
[[1;34mINFO[m] Finished at: 2018-01-12T20:02:32+04:00
[[1;34mINFO[m] Final Memory: 13M/158M
[[1;34mINFO[m] [1m------------------------------------------------------------------------[m
